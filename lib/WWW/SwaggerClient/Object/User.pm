package WWW::SwaggerClient::Object::User;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'id' => 'int',
    'wp_id' => 'int',
    'display_name' => 'string',
    'login_name' => 'string',
    'email' => 'string',
    'token' => 'string',
    'administrator' => 'boolean'
};

my $attribute_map = {
    'id' => 'id',
    'wp_id' => 'wpId',
    'display_name' => 'displayName',
    'login_name' => 'loginName',
    'email' => 'email',
    'token' => 'token',
    'administrator' => 'administrator'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #User id
        'id' => $args{'id'}, 
        #Wordpress user id
        'wp_id' => $args{'wpId'}, 
        #User display name
        'display_name' => $args{'displayName'}, 
        #User login name
        'login_name' => $args{'loginName'}, 
        #User email
        'email' => $args{'email'}, 
        #User token
        'token' => $args{'token'}, 
        #Is user administrator
        'administrator' => $args{'administrator'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
