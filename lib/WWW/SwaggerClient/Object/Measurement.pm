package WWW::SwaggerClient::Object::Measurement;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'id' => 'int',
    'user_id' => 'int',
    'client_id' => 'string',
    'connector_id' => 'int',
    'variable_id' => 'int',
    'source_id' => 'int',
    'start_time' => 'int',
    'value' => 'double',
    'unit_id' => 'int',
    'original_value' => 'double',
    'original_unit_id' => 'int',
    'duration' => 'int',
    'note' => 'string',
    'latitude' => 'double',
    'longitude' => 'double',
    'location' => 'string',
    'created_at' => 'DateTime',
    'updated_at' => 'DateTime',
    'error' => 'string'
};

my $attribute_map = {
    'id' => 'id',
    'user_id' => 'user_id',
    'client_id' => 'client_id',
    'connector_id' => 'connector_id',
    'variable_id' => 'variable_id',
    'source_id' => 'source_id',
    'start_time' => 'start_time',
    'value' => 'value',
    'unit_id' => 'unit_id',
    'original_value' => 'original_value',
    'original_unit_id' => 'original_unit_id',
    'duration' => 'duration',
    'note' => 'note',
    'latitude' => 'latitude',
    'longitude' => 'longitude',
    'location' => 'location',
    'created_at' => 'created_at',
    'updated_at' => 'updated_at',
    'error' => 'error'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #id
        'id' => $args{'id'}, 
        #ID of user that owns this measurement
        'user_id' => $args{'user_id'}, 
        #client_id
        'client_id' => $args{'client_id'}, 
        #Connector ID
        'connector_id' => $args{'connector_id'}, 
        #ID of the variable for which we are creating the measurement records
        'variable_id' => $args{'variable_id'}, 
        #Application or device used to record the measurement values
        'source_id' => $args{'source_id'}, 
        #Start Time for the measurement event in ISO 8601
        'start_time' => $args{'start_time'}, 
        #Converted measurement value in requested unit
        'value' => $args{'value'}, 
        #Unit ID of measurement as requested in GET request
        'unit_id' => $args{'unit_id'}, 
        #Original value
        'original_value' => $args{'original_value'}, 
        #Unit ID of measurement as originally submitted
        'original_unit_id' => $args{'original_unit_id'}, 
        #duration of measurement in seconds
        'duration' => $args{'duration'}, 
        #Note of measurement
        'note' => $args{'note'}, 
        #latitude
        'latitude' => $args{'latitude'}, 
        #longitude
        'longitude' => $args{'longitude'}, 
        #location
        'location' => $args{'location'}, 
        #created_at
        'created_at' => $args{'created_at'}, 
        #updated_at
        'updated_at' => $args{'updated_at'}, 
        #error
        'error' => $args{'error'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
