package WWW::SwaggerClient::Object::Correlation;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'correlation_coefficient' => 'number',
    'cause' => 'string',
    'original_cause' => 'string',
    'effect' => 'string',
    'original_effect' => 'string',
    'onset_delay' => 'double',
    'duration_of_action' => 'number',
    'number_of_pairs' => 'number',
    'effect_size' => 'string',
    'statistical_significance' => 'string',
    'timestamp' => 'number',
    'reverse_correlation' => 'number',
    'causality_factor' => 'number',
    'cause_category' => 'string',
    'effect_category' => 'string',
    'value_predicting_high_outcome' => 'number',
    'value_predicting_low_outcome' => 'number',
    'optimal_pearson_product' => 'number',
    'average_vote' => 'number',
    'user_vote' => 'number',
    'cause_unit' => 'string',
    'cause_unit_id' => 'int'
};

my $attribute_map = {
    'correlation_coefficient' => 'correlationCoefficient',
    'cause' => 'cause',
    'original_cause' => 'originalCause',
    'effect' => 'effect',
    'original_effect' => 'originalEffect',
    'onset_delay' => 'onsetDelay',
    'duration_of_action' => 'durationOfAction',
    'number_of_pairs' => 'numberOfPairs',
    'effect_size' => 'effectSize',
    'statistical_significance' => 'statisticalSignificance',
    'timestamp' => 'timestamp',
    'reverse_correlation' => 'reverseCorrelation',
    'causality_factor' => 'causalityFactor',
    'cause_category' => 'causeCategory',
    'effect_category' => 'effectCategory',
    'value_predicting_high_outcome' => 'valuePredictingHighOutcome',
    'value_predicting_low_outcome' => 'valuePredictingLowOutcome',
    'optimal_pearson_product' => 'optimalPearsonProduct',
    'average_vote' => 'averageVote',
    'user_vote' => 'userVote',
    'cause_unit' => 'causeUnit',
    'cause_unit_id' => 'causeUnitId'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #Pearson correlation coefficient between cause and effect measurements
        'correlation_coefficient' => $args{'correlationCoefficient'}, 
        #ORIGINAL variable name of the cause variable for which the user desires correlations.
        'cause' => $args{'cause'}, 
        #original name of the cause.
        'original_cause' => $args{'originalCause'}, 
        #ORIGINAL variable name of the effect variable for which the user desires correlations.
        'effect' => $args{'effect'}, 
        #effect variable original name.
        'original_effect' => $args{'originalEffect'}, 
        #User estimated or default time after cause measurement before a perceivable effect is observed
        'onset_delay' => $args{'onsetDelay'}, 
        #Time over which the cause is expected to produce a perceivable effect following the onset delay
        'duration_of_action' => $args{'durationOfAction'}, 
        #Number of points that went into the correlation calculation
        'number_of_pairs' => $args{'numberOfPairs'}, 
        #Magnitude of the effects of a cause indicating whether it's practically meaningful.
        'effect_size' => $args{'effectSize'}, 
        #A function of the effect size and sample size
        'statistical_significance' => $args{'statisticalSignificance'}, 
        #Time at which correlation was calculated
        'timestamp' => $args{'timestamp'}, 
        #Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation.
        'reverse_correlation' => $args{'reverseCorrelation'}, 
        #
        'causality_factor' => $args{'causalityFactor'}, 
        #Variable category of the cause variable.
        'cause_category' => $args{'causeCategory'}, 
        #Variable category of the effect variable.
        'effect_category' => $args{'effectCategory'}, 
        #cause value that predicts an above average effect value (in default unit for cause variable)
        'value_predicting_high_outcome' => $args{'valuePredictingHighOutcome'}, 
        #cause value that predicts a below average effect value (in default unit for cause variable)
        'value_predicting_low_outcome' => $args{'valuePredictingLowOutcome'}, 
        #Optimal Pearson Product
        'optimal_pearson_product' => $args{'optimalPearsonProduct'}, 
        #Average Vote
        'average_vote' => $args{'averageVote'}, 
        #User Vote
        'user_vote' => $args{'userVote'}, 
        #Unit of Cause
        'cause_unit' => $args{'causeUnit'}, 
        #Unit Id of Cause
        'cause_unit_id' => $args{'causeUnitId'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
