package WWW::SwaggerClient::Object::UserVariables;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'user' => 'int',
    'variable' => 'string',
    'duration_of_action' => 'int',
    'filling_value' => 'int',
    'join_with' => 'string',
    'maximum_value' => 'double',
    'minimum_value' => 'double',
    'name' => 'string',
    'onset_delay' => 'int',
    'unit' => 'string'
};

my $attribute_map = {
    'user' => 'user',
    'variable' => 'variable',
    'duration_of_action' => 'durationOfAction',
    'filling_value' => 'fillingValue',
    'join_with' => 'joinWith',
    'maximum_value' => 'maximumValue',
    'minimum_value' => 'minimumValue',
    'name' => 'name',
    'onset_delay' => 'onsetDelay',
    'unit' => 'unit'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #User ID
        'user' => $args{'user'}, 
        #Variable DISPLAY name
        'variable' => $args{'variable'}, 
        #Estimated duration of time following the onset delay in which a stimulus produces a perceivable effect
        'duration_of_action' => $args{'durationOfAction'}, 
        #fillingValue
        'filling_value' => $args{'fillingValue'}, 
        #joinWith
        'join_with' => $args{'joinWith'}, 
        #maximumValue
        'maximum_value' => $args{'maximumValue'}, 
        #minimumValue
        'minimum_value' => $args{'minimumValue'}, 
        #name
        'name' => $args{'name'}, 
        #onsetDelay
        'onset_delay' => $args{'onsetDelay'}, 
        #unit
        'unit' => $args{'unit'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
