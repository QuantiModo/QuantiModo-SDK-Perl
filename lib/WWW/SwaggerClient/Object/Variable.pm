package WWW::SwaggerClient::Object::Variable;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
      'name' => 'string',
      'original_name' => 'string',
      'category' => 'string',
      'unit' => 'string',
      'sources' => 'string',
      'minimum_value' => 'double',
      'maximum_value' => 'double',
      'combination_operation' => 'string',
      'filling_value' => 'double'
};

my $attribute_map = {
      'name' => 'name',
      'original_name' => 'originalName',
      'category' => 'category',
      'unit' => 'unit',
      'sources' => 'sources',
      'minimum_value' => 'minimumValue',
      'maximum_value' => 'maximumValue',
      'combination_operation' => 'combinationOperation',
      'filling_value' => 'fillingValue'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #User-defined variable display name.
        'name' => $args{'name'}, 
        #Name used when the variable was originally created in the `variables` table.
        'original_name' => $args{'originalName'}, 
        #Variable category like Mood, Sleep, Physical Activity, Treatment, Symptom, etc.
        'category' => $args{'category'}, 
        #Abbreviated name of the default unit for the variable
        'unit' => $args{'unit'}, 
        #Comma-separated list of source names to limit variables to those sources
        'sources' => $args{'sources'}, 
        #Minimum reasonable value for this variable (uses default unit)
        'minimum_value' => $args{'minimumValue'}, 
        #Maximum reasonable value for this variable (uses default unit)
        'maximum_value' => $args{'maximumValue'}, 
        #How to aggregate measurements over time.
        'combination_operation' => $args{'combinationOperation'}, 
        #Value for replacing null measurements
        'filling_value' => $args{'fillingValue'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
  return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
  return $attribute_map;
}

1;
