package WWW::SwaggerClient::Object::Variable;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'id' => 'int',
    'client_id' => 'string',
    'parent_id' => 'int',
    'name' => 'string',
    'variable_category_id' => 'int',
    'default_unit_id' => 'int',
    'combination_operation' => 'string',
    'filling_value' => 'double',
    'maximum_allowed_value' => 'double',
    'minimum_allowed_value' => 'double',
    'onset_delay' => 'int',
    'duration_of_action' => 'int',
    'public' => 'int',
    'cause_only' => 'boolean',
    'most_common_value' => 'double',
    'most_common_unit_id' => 'int',
    'standard_deviation' => 'double',
    'variance' => 'double',
    'mean' => 'double',
    'median' => 'double',
    'number_of_measurements' => 'double',
    'number_of_unique_values' => 'double',
    'skewness' => 'double',
    'kurtosis' => 'double',
    'status' => 'string',
    'error_message' => 'string',
    'last_successful_update_time' => 'DateTime',
    'created_at' => 'DateTime',
    'updated_at' => 'DateTime',
    'product_url' => 'string',
    'image_url' => 'string',
    'price' => 'double',
    'number_of_user_variables' => 'int',
    'outcome' => 'boolean',
    'minimum_recorded_value' => 'double',
    'maximum_recorded_value' => 'double'
};

my $attribute_map = {
    'id' => 'id',
    'client_id' => 'client_id',
    'parent_id' => 'parent_id',
    'name' => 'name',
    'variable_category_id' => 'variable_category_id',
    'default_unit_id' => 'default_unit_id',
    'combination_operation' => 'combination_operation',
    'filling_value' => 'filling_value',
    'maximum_allowed_value' => 'maximum_allowed_value',
    'minimum_allowed_value' => 'minimum_allowed_value',
    'onset_delay' => 'onset_delay',
    'duration_of_action' => 'duration_of_action',
    'public' => 'public',
    'cause_only' => 'cause_only',
    'most_common_value' => 'most_common_value',
    'most_common_unit_id' => 'most_common_unit_id',
    'standard_deviation' => 'standard_deviation',
    'variance' => 'variance',
    'mean' => 'mean',
    'median' => 'median',
    'number_of_measurements' => 'number_of_measurements',
    'number_of_unique_values' => 'number_of_unique_values',
    'skewness' => 'skewness',
    'kurtosis' => 'kurtosis',
    'status' => 'status',
    'error_message' => 'error_message',
    'last_successful_update_time' => 'last_successful_update_time',
    'created_at' => 'created_at',
    'updated_at' => 'updated_at',
    'product_url' => 'product_url',
    'image_url' => 'image_url',
    'price' => 'price',
    'number_of_user_variables' => 'number_of_user_variables',
    'outcome' => 'outcome',
    'minimum_recorded_value' => 'minimum_recorded_value',
    'maximum_recorded_value' => 'maximum_recorded_value'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #id
        'id' => $args{'id'}, 
        #client_id
        'client_id' => $args{'client_id'}, 
        #parent_id
        'parent_id' => $args{'parent_id'}, 
        #Name of the variable
        'name' => $args{'name'}, 
        #Category of the variable
        'variable_category_id' => $args{'variable_category_id'}, 
        #ID of the default unit of measurement to use for this variable
        'default_unit_id' => $args{'default_unit_id'}, 
        #How to combine values of this variable (for instance, to see a summary of the values over a month) 0 for sum OR 1 for mean
        'combination_operation' => $args{'combination_operation'}, 
        #filling_value
        'filling_value' => $args{'filling_value'}, 
        #maximum_allowed_value
        'maximum_allowed_value' => $args{'maximum_allowed_value'}, 
        #minimum_allowed_value
        'minimum_allowed_value' => $args{'minimum_allowed_value'}, 
        #onset_delay
        'onset_delay' => $args{'onset_delay'}, 
        #duration_of_action
        'duration_of_action' => $args{'duration_of_action'}, 
        #public
        'public' => $args{'public'}, 
        #cause_only
        'cause_only' => $args{'cause_only'}, 
        #most_common_value
        'most_common_value' => $args{'most_common_value'}, 
        #most_common_unit_id
        'most_common_unit_id' => $args{'most_common_unit_id'}, 
        #standard_deviation
        'standard_deviation' => $args{'standard_deviation'}, 
        #variance
        'variance' => $args{'variance'}, 
        #mean
        'mean' => $args{'mean'}, 
        #median
        'median' => $args{'median'}, 
        #number_of_measurements
        'number_of_measurements' => $args{'number_of_measurements'}, 
        #number_of_unique_values
        'number_of_unique_values' => $args{'number_of_unique_values'}, 
        #skewness
        'skewness' => $args{'skewness'}, 
        #kurtosis
        'kurtosis' => $args{'kurtosis'}, 
        #status
        'status' => $args{'status'}, 
        #error_message
        'error_message' => $args{'error_message'}, 
        #last_successful_update_time
        'last_successful_update_time' => $args{'last_successful_update_time'}, 
        #created_at
        'created_at' => $args{'created_at'}, 
        #updated_at
        'updated_at' => $args{'updated_at'}, 
        #product_url
        'product_url' => $args{'product_url'}, 
        #image_url
        'image_url' => $args{'image_url'}, 
        #price
        'price' => $args{'price'}, 
        #number_of_user_variables
        'number_of_user_variables' => $args{'number_of_user_variables'}, 
        #outcome
        'outcome' => $args{'outcome'}, 
        #minimum_recorded_value
        'minimum_recorded_value' => $args{'minimum_recorded_value'}, 
        #maximum_recorded_value
        'maximum_recorded_value' => $args{'maximum_recorded_value'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
