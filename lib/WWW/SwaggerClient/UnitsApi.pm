#
# Copyright 2015 Reverb Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
#
package WWW::SwaggerClient::UnitsApi;

require 5.6.0;
use strict;
use warnings;
use utf8; 
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);


#use WWW::Swagger::Model::Category;
#use WWW::Swagger::Model::Pet;


use WWW::SwaggerClient::APIClient;

our @EXPORT_OK = qw(
  unit_categories_get 
  units_get 
  
);

sub new {
    my $class   = shift;
    my $default_api_client = WWW::SwaggerClient::APIClient->new;
    my (%self) = (
        'api_client' => $default_api_client,
        @_
    );

    #my $self = {
    #    #api_client => $options->{api_client}
    #    api_client => $default_api_client
    #}; 

    bless \%self, $class;

}

    
    #
    # unit_categories_get
    #
    # Get unit categories
    # 
    # @return void
    #
    sub unit_categories_get {
      my ($self, %args) = @_;

      

      # parse inputs
      my $_resource_path = '/unitCategories';
      $_resource_path =~ s/{format}/json/; # default format to json

      my $_method = 'GET';
      my $query_params = {};
      my $header_params = {};
      my $form_params = {};

      # 'Accept' and 'Content-Type' header
      my $_header_accept = $self->{api_client}->select_header_accept('application/json');
      if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
      }
      $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

      
      
      
      
      my $_body_data;
      

      # for HTTP post (form)
      #$_body_data = $_body ? undef : $form_params;

      # make the API Call
      
      $self->{api_client}->call_api($_resource_path, $_method,
                                             $query_params, $form_params,
                                             $header_params, $_body_data);
      return;
      
  }
  
    #
    # units_get
    #
    # Get all available units
    # 
    # @param string $unit_name Unit name (required)
    # @param string $abbreviated_unit_name Restrict the results to a specific unit by providing the unit abbreviation. (required)
    # @param string $category_name Restrict the results to a specific unit category by providing the unit category name. (required)
    # @return void
    #
    sub units_get {
      my ($self, %args) = @_;

      

      # parse inputs
      my $_resource_path = '/units';
      $_resource_path =~ s/{format}/json/; # default format to json

      my $_method = 'GET';
      my $query_params = {};
      my $header_params = {};
      my $form_params = {};

      # 'Accept' and 'Content-Type' header
      my $_header_accept = $self->{api_client}->select_header_accept('application/json');
      if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
      }
      $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

       # query params
      if ( exists $args{'unit_name'}) {
        $query_params->{'unitName'} = WWW::::APIClient::to_query_value($args{'unit_name'});
      } # query params
      if ( exists $args{'abbreviated_unit_name'}) {
        $query_params->{'abbreviatedUnitName'} = WWW::::APIClient::to_query_value($args{'abbreviated_unit_name'});
      } # query params
      if ( exists $args{'category_name'}) {
        $query_params->{'categoryName'} = WWW::::APIClient::to_query_value($args{'category_name'});
      }
      
      
      
      my $_body_data;
      

      # for HTTP post (form)
      #$_body_data = $_body ? undef : $form_params;

      # make the API Call
      
      $self->{api_client}->call_api($_resource_path, $_method,
                                             $query_params, $form_params,
                                             $header_params, $_body_data);
      return;
      
  }
  


1;
